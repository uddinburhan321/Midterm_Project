Please answer the below core-java Questions:

What is programing language?
Ans :A programming language is a set of commands, instructions, and other syntax use to create a software program.
    Languages that programmers use to write code are called "high-level languages."
    This code can be compiled into a "low-level language," which is recognized directly by the computer hardware.

What jdk contains or composed of and define each components?
Ans : appletviewer:	This tool is used to run and debug Java applets without a web browser.
    apt:	It is an annotation-processing tool.
    extcheck:	it is a utility that detects JAR file conflicts.
    idlj:	An IDL-to-Java compiler. This utility generates Java bindings from a given Java IDL file.
    jabswitch:	It is a Java Access Bridge. Exposes assistive technologies on Microsoft Windows systems.
    java:	The loader for Java applications. This tool is an interpreter and can interpret the class files generated by the javac compiler. Now a single launcher is used for both development and deployment. The old deployment launcher, jre, no longer comes with Sun JDK, and instead it has been replaced by this new java loader.
    javac:	It specifies the Java compiler, which converts source code into Java bytecode.
    javadoc:	The documentation generator, which automatically generates documentation from source code comments
    jar:	The specifies the archiver, which packages related class libraries into a single JAR file. This tool also helps manage JAR files.
    javafxpackager:	It is a tool to package and sign JavaFX applications.
    jarsigner:	the jar signing and verification tool.
    javah:	the C header and stub generator, used to write native methods.
    javap:	the class file disassembler.
    javaws:	the Java Web Start launcher for JNLP applications.
    JConsole:	Java Monitoring and Management Console.
    jdb:	the debugger.
    jhat:	Java Heap Analysis Tool (experimental).
    jinfo:	This utility gets configuration information from a running Java process or crash dump.
    jmap:	Oracle jmap - Memory Map- This utility outputs the memory map for Java and can print shared object memory maps or heap memory details of a given process or core dump.
    jmc:	Java Mission Control
    jps:	Java Virtual Machine Process Status Tool lists the instrumented HotSpot Java Virtual Machines (JVMs) on the target system.
    jrunscript:	Java command-line script shell.
    jstack:	It is a utility that prints Java stack traces of Java threads (experimental).
    jstat:	Java Virtual Machine statistics monitoring tool (experimental).
    jstatd:	jstat daemon (experimental).
    keytool:	It is a tool for manipulating the keystore.
    pack200:	JAR compression tool.
    Policytool:	It specifies the policy creation and management tool, which can determine policy for a Java runtime, specifying which permissions are available for code from various sources.
    VisualVM:	It is a visual tool integrating several command-line JDK tools and lightweight [clarification needed] performance and memory profiling capabilities
    wsimport:	It generates portable JAX-WS artifacts for invoking a web service.
    xjc:	It is the part of the Java API for XML Binding (JAXB) API. It accepts an XML schema and generates Java classes.

What is IDE?
Ans : An IDE, or Integrated Development Environment, enables programmers to consolidate the different aspects of writing a computer program.

What are the IDEs available in the market to support java?
Ans : Eclipse, IntelliJ, NetBeans, JDeveloper, MyEclipse, BlueJ, JCreator, DrJava, jGRASP, JSource.

Explain the entire java life cycle.
Ans : Input Unit: receives data from the input devices such as the keyboard, mouse and any other peripherals
      Memory Unit: the primary memory unit (Random Access Memory(RAM)) provides fast access storage of computer programs, data from the input devices and data to be sent to the output devices.
      Arithmetic and Logic Unit (ALU): performs the arithmetic calculations on data in memory, such as addition, subtraction, multiplication, division and comparison.
      Central Processing Unit (CPU): manages the other units by sending messages to the input unit to read data into the memory unit, informs the ALU which data to operate on, etc.
      Storage Unit: stores and reads data and programs in long-term storage (e.g. harddisk drive) to be used at a later time.
      Output Unit: sends information from the computer to make it available outside of the computer, e.g. printer, network device etc.

what is class?
Ans : A class--the basic building block of an object-oriented language such as Java--is a template that describes the data and behavior associated with instances of that class.
    When you instantiate a class you create an object that looks and feels like other instances of the same class.

What is object?
Ans : An object is an instance of a class. An object is a self-contained component which consists of methods and properties to make certain type of data useful.

What is the entry point of an application?
Ans : In computer programming, an entry point is where the first instructions of a program are executed, and where the program has access to command line arguments.
    To start a program's execution, the loader or operating system passes control to its entry point. A Java application is a public Java class with a main() method.
    The main() method is the entry point into the application.

Why main is static?
Ans : main method is always static, so that compiler can call it without the creation of an object or before the creation of an object of the class.
    Static method of a class can be called by using the class name only without creating an object of a class.

Which class is the superclass of all classes?
Ans : Object class is the root or superclass of the class hierarchy.

What is difference between path and classpath variables?
Ans : Path is used define where the system can find the executables(.exe) files and classpath is used to specify the location.

What is the difference between an Interface and Abstract class?
Ans : -Main difference is methods of a Java interface are implicitly abstract and cannot have implementations. A Java abstract class can have instance methods that implements a default behavior.

      -Variables declared in a Java interface is by default final. An  abstract class may contain non-final variables.

      -Members of a Java interface are public by default. A Java abstract class can have the usual flavors of class members like private, protected, etc..

      -Java interface should be implemented using keyword “implements”; A Java abstract class should be extended using keyword “extends”.

      -An interface can extend another Java interface only, an abstract class can extend another Java class and implement multiple Java interfaces.

      -A Java class can implement multiple interfaces but it can extend only one abstract class.

      -Interface is absolutely abstract and cannot be instantiated; A Java abstract class also cannot be instantiated, but can be invoked if a main() exists.

      -In comparison with java abstract classes, java interfaces are slow as it requires extra indirection.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
Ans : No, we can't create an object of an abstract class or interface. You can not instantiate an abstract class or an interface - you can instantiate one of their subclasses/implementers.
    There are two ways you can achieve this.
    - Either you extend / implement the Abstract class / interface in a new class, create the object of this new class and then use this object as per your need.
    -The Compiler allows you to create anonymous objects of the interfaces in your code.

what is Access Specifier?
Ans : Access Specifiers regulate access to classes, fields and methods. These Specifiers determine whether a field or method in a class, can be used or invoked by another method in another class or sub-class.

What is OOP ? Define each feature of java OOP.
Ans : Object means a real-world entity such as a pen, chair, table, computer, watch, etc. Object-Oriented Programming is a methodology or paradigm to design a program using classes and objects.
    It simplifies software development and maintenance by providing some concepts:
    Inheritance - When one object acquires all the properties and behaviors of a parent object, it is known as inheritance. It provides code reusablity. It is used to achieve runtime polymorphism.
    Polymorphism - Polymorphism in Java is a concept by which we can perform a single action in different ways. The word "poly" means many and "morphs" means forms. So polymorphism means many forms.
    Abstraction - Abstraction is a process of hiding the implementation details and showing only functionality to the user.
    Encapsulation - Encapsulation in Java is a process of wrapping code and data together into a single unit, for example, a capsule which is mixed of several medicines.

What is Java Package and which package is imported by default?
Ans : A package is a namespace that organizes a set of related classes and interfaces. java. lang package is imported by default, no need to explicitly import it. Classes in the java.
    lang package do not need to be imported

What is API? Name list of API that you have used so far.
Ans : API is the acronym for Application Programming Interface, which is a software intermediary that allows two applications to talk to each other.
    Each time you use an app like Facebook, send an instant message, or check the weather on your phone, you're using an API.
    Bellow some widely used API
    Skyscanner API
    Open Weather API
    API-Football
    Cocktail DB API
    REST Countries
    Yahoo Finance
    URL Shortener API

Does java support multiple inheritance, explain why or why not?
Ans : No. When the child class extends from more than one superclass, it is known as multiple inheritance. However, Java does not support multiple inheritance.
    The reason behind this is to prevent ambiguity. Consider a case where class B extends class A and Class C and both class A and C have the same method display().
    Now java compiler cannot decide, which display method it should inherit. To prevent such situation, multiple inheritances is not allowed in java.
    To achieve multiple inheritance in Java, we must use the interface.

What is method overloading and when it happens?
Ans : Method Overloading is a feature that allows a class to have more than one method having the same name, if their argument lists are different.
    It is similar to constructor overloading in Java, that allows a class to have more than one constructor having different argument lists.

Explain exceptions in java and how to handle it.
Ans: An exception object is an instance of an exception class. It gets created and handed to the Java runtime when an exceptional event occurred that disrupted the normal flow of the application.
    This is called “to throw an exception” because in Java you use the keyword “throw” to hand the exception to the runtime. we can also use try catch method to find exceptions.

What is static keyword in java? How it has been used in variables and methods ?
Ans: static keyword is mainly used for memory management. It can be used with variables, methods, blocks and nested classes. It is a keyword which is used to share the same variable or method of a given class.
    Basically, static is used for a constant variable or a method that is same for every instance of a class.

What is final and how it has been used variables and methods?
Ans: final keyword is used in different contexts. First of all, final is a non-access modifier applicable only to a variable, a method or a class.
    Following are different contexts where final is used. When a variable is declared with final keyword, its value can't be modified, essentially, a constant.

What is final, finally and finalize?
Ans:  Final is a keyword. Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
    Finally is used to place important code, it will be executed whether exception is handled or not.
    Finalize is used to perform clean up processing just before object is garbage collected.

What is a constructor ?
Ans: A constructor resembles an instance method in java but it’s not a method as it doesn’t have a return type.

Can we have multiple constructors in a class?
Ans: yes as long the parameters are not the same.

If we don't have a constructor declared, what is called during the object creation?
Ans: All classes have at least one constructor. If a class does not explicitly declare any, the Java compiler automatically provides a no-argument constructor, called the default constructor.

What is "this" keyword in java ?
Ans: The this keyword refers to the current object in a method or constructor.
    The most common use of the this keyword is to eliminate the confusion between class attributes and parameters with the same name

What is "super" keyword in java? How many possible way can you use?
Ans: The super keyword in java is a reference variable that is used to refer parent. We could access maxSpeed of base class in sublcass using super keyword.

What is JVM stand for ?
Ans: Java virtual machine.

Is JVM platform independent?
Ans: Yes.

What version of java are you using?
Ans: 13.0

What is JAR stand for ?
Ans: Java Archive.

What is the difference between JDK and JVM?
Ans: JVM is Java Virtual Machine, the JVM actually runs Java bytecode.
    JDK is Java Developer Kit, the JDK is what you need to compile Java source code.

What is the difference between JVM and JRE?
Ans: The JRE is the environment within which the virtual machine runs. JRE is the container, JVM is the content. Java Runtime Environment contains JVM, class libraries, and other supporting files.

What is compile time and run time?
Ans: Runtime and compile time are programming terms that refer to different stages of software program development.
    Compile-time is the instance where the code you entered is converted to executable while Run-time is the instance where the executable is running.

What is heap?
Ans: A Heap is a special Tree-based data structure in which the tree is a complete binary tree.

How java manage it's memory?
Ans: The JVM loads the code, verifies the code, executes the code, manages memory (this includes allocating memory from the Operating System (OS),
    managing Java allocation including heap compaction and removal of garbage objects) and finally provides the runtime environment.

What is the difference between String, StringBuffer and StringBuilder?
Ans: String is immutable, if you try to alter their values, another object gets created. The difference between StringBuffer and StringBuilder is that StringBuffer is thread-safe.
    So when the application needs to be run only in a single thread then it is better to use StringBuilder . StringBuilder is more efficient than StringBuffer .

What is Singleton class?
Ans: A singleton class is a class that can have only one object (an instance of the class) at a time.

What is Serialization and Deserialization?
Ans:  Serialization is a mechanism of converting the state of an object into a byte stream.
    Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory. This mechanism is used to persist the object.

when to use transient variable in java?
Ans: The Java transient keyword is used on class attributes/variables to indicate that serialization process of such class should ignore such variables while creating a persistent byte stream for any instance of that class.
    A transient variable is a variable that can not be serialized.

Difference between while and do..while loop?
Ans: while loop check condition before iteration of the loop. On the other hand, the do-while loop verifies the condition after the execution of the statements inside the loop.

What is Enum?
Ans: An enum is a user-defined type consisting of a set of named constants called enumerators.

What is Iterator?
Ans: an iterator is an object that enables a programmer to traverse a container, particularly lists. Various types of iterators are often provided via a container's interface.

Which one will take more memory, an int or Integer?
Ans: integer will.

Why is String Immutable in Java?
Ans: The string is Immutable in Java because String objects are cached in String pool. Another reason of why String class is immutable could die due to HashMap.
    Since Strings are very popular as HashMap key, it's important for them to be immutable so that they can retrieve the value object which was stored in HashMap.

What is constructor chaining in Java?
Ans: Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
    Constructor chaining can be done in two ways: Within same class: It can be done using this() keyword for constructors in same class.

The difference between Serial and Parallel Garbage Collector?
Ans: A serial collector is a default copying collector which uses only one GC thread for the GC operation, while a parallel collector uses multiple GC threads for the GC operation.

What is JIT stands for?
Ans: Just in time

Explain Java Heap space and Garbage collection?
Ans: Java objects reside in an area called the heap. The heap is created when the JVM starts up and may increase or decrease in size while the application runs.
    When the heap becomes full, garbage is collected. During the garbage collection objects that are no longer used are cleared, thus making space for new objects.

Can you guarantee the garbage collection process?
Ans: In automatic process, programmers need not initiate the garbage collection process explicitly in the code.
    It can choose to reject the request and so it is not guaranteed that these calls will do the garbage collection.

What is the difference between stack and heap in Java?
Ans: The main difference between heap and stack is that stack memory is used to store local variables and function call while heap memory is used to store objects in Java.

What is reflection in java and why is it useful?
Ans: Reflection is an API that is used to examine or modify the behaviour of methods.
    Java Reflection makes it possible to inspect classes, interfaces, fields and methods at runtime, without knowing the names of the classes, methods etc. at compile time.

what is multithreading in java?
Ans: Multithreading in java is a process of executing multiple threads simultaneously. A thread is a lightweight sub-process, the smallest unit of processing.

What is the use of synchronization in Java?
Ans: Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads in Java.
    Synchronization in Java guarantees that no two threads can execute a synchronized method which requires the same lock simultaneously or concurrently.

What is Framework?
Ans: an essential supporting structure of an object.

What are the testing Framework available in java?
Ans: JTest, The Grinder, TestNG, JUnit, JWalk, Mockito.

Difference between jUnit and testNG?
Ans: TestNG uses test groups, which can categorize tests according to features such as run times. As I said at the beginning of this column, JUnit 4 and TestNG are similar on the surface.
    But whereas JUnit is designed to hone in on a unit of code, TestNG is meant for high-level testing.

What are the dependencies for this project?
Ans: testng, gson, mysql etc.

what is dependency injection in java?
Ans:  dependency injection is a technique whereby one object (or static method) supplies the dependencies of another object.

What is static binding and dynamic binding?
Ans: Static binding uses Type information for binding while Dynamic binding uses Objects to resolve binding.
    Overloaded methods are resolved (deciding which method to be called when there are multiple methods with same name) using static binding while overridden methods using dynamic binding.
